apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "edu.cmu.msitese.dndiandroid"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "TWITTER_API_KEY", TWITTER_API_KEY)
        buildConfigField("String", "TWITTER_API_SECRET", TWITTER_API_SECRET)
        buildConfigField("String", "TWITTER_ACCESS_TOKEN", TWITTER_ACCESS_TOKEN)
        buildConfigField("String", "TWITTER_ACCESS_SECRET", TWITTER_ACCESS_SECRET)
        buildConfigField("String", "TWITTER_USER_ID", TWITTER_USER_ID)


        buildConfigField("String", "FACEBOOK_API_KEY", FACEBOOK_API_KEY)
        buildConfigField("String", "GOOGLE_PLACE_API_KEY", GOOGLE_PLACE_API_KEY)

        // Enabling multidex support.
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    // use the Hamcrest matcher library
    

    // include Mokito for unit test
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:2.7.22'
    androidTestCompile 'org.mockito:mockito-android:2.7.22'
    // include json for testing
    testCompile group: 'org.json', name: 'json', version: '20170516'

    // include the Bezirk middleware framework
    compile(group: 'com.bezirk', name: 'android-zirk-proxy', version: '3.0.2-3', ext:'aar') {
        exclude group: 'com.google.android'
        transitive = true
    }

    // include twitter4j package
    compile 'org.twitter4j:twitter4j-core:4.0.6'
    compile 'org.twitter4j:twitter4j-async:4.0.6'
    compile 'org.twitter4j:twitter4j-stream:4.0.6'
    // include facebook package
//    compile 'com.facebook.android:facebook-android-sdk:[4,5)'

    // include Google Play Services
    compile 'com.google.android.gms:play-services-places:11.0.1'
    compile 'com.google.android.gms:play-services-location:11.0.1'
    compile 'com.google.android.gms:play-services-maps:11.0.1'

    compile 'com.android.support:multidex:1.0.0'
}

// add the Bezirk repository
repositories {
    jcenter()
    maven {
        url "https://bezirk.artifactoryonline.com/bezirk/libs-release-local"
    }
    mavenCentral()
}

// add a task to generate code coverage report for both android test and local test
// reference:
// [1] https://github.com/rafaeltoledo/unified-code-coverage-android
// [2] https://stackoverflow.com/questions/29133761/jacoco-code-coverage-in-android-studio
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}
